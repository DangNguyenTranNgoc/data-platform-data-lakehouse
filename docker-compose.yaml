version: '3.9'

services:
  postgres:
    image: postgres:14-alpine
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    healthcheck:
      test: ["CMD", "psql", "-U", "${POSTGRES_USER}", "${POSTGRES_DB}"]
    ports:
      - '5432:5432'
    networks:
      - platform-network

  app:
    build: ./containers/hive-metatore/Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      - DATABASE_HOST=postgres
      - DATABASE_DB=${POSTGRES_DB}
      - DATABASE_USER=${POSTGRES_USER}
      - DATABASE_PASSWORD=${POSTGRES_PASSWORD}
      - AWS_ACCESS_KEY_ID
      - AWS_SECRET_ACCESS_KEY
      - S3_ENDPOINT_URL=http://localstack:${LOCALSTACK_PORT}
      - S3_BUCKET
      - S3_PREFIX
    ports:
      - '9083:9083'
    networks:
      - platform-network
  
  trino:
    hostname: trino
    image: 'trinodb/trino:latest'
    ports:
      - '8080:8080'
    volumes:
      - ${PWD}/trino-etc:/etc/trino
    networks:
      - platform-network
  
  minio:
    hostname: minio
    image: 'quay.io/minio/minio:latest'
    container_name: minio
    ports:
      - '9000:9000'
      - '9001:9001'
    volumes:
      - minio-data:/data
    environment:
      MINIO_ROOT_USER: minio_access_key
      MINIO_ROOT_PASSWORD: minio_secret_key
    command: server /data --console-address ":9001"
    networks:
      - platform-network

volumes:
  minio-data:
    driver: local
  hive-data:
    driver: local

networks:
  platform-network:
    driver: bridge


